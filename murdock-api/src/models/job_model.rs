/*
 * Murdock API
 *
 * This is the Murdock API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct JobModel {
    #[serde(rename = "uid", skip_serializing_if = "Option::is_none")]
    pub uid: Option<String>,
    #[serde(rename = "commit", skip_serializing_if = "Option::is_none")]
    pub commit: Option<Box<crate::models::InformationOfTheCommitToProcess>>,
    #[serde(rename = "ref", skip_serializing_if = "Option::is_none")]
    pub _ref: Option<String>,
    #[serde(rename = "prinfo", skip_serializing_if = "Option::is_none")]
    pub prinfo: Option<Box<crate::models::PullRequestDetailedInformationIfAny>>,
    #[serde(rename = "creation_time", skip_serializing_if = "Option::is_none")]
    pub creation_time: Option<f32>,
    #[serde(rename = "start_time", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<f32>,
    #[serde(rename = "fasttracked", skip_serializing_if = "Option::is_none")]
    pub fasttracked: Option<bool>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<serde_json::Value>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    #[serde(rename = "output", skip_serializing_if = "Option::is_none")]
    pub output: Option<String>,
    #[serde(rename = "output_text_url", skip_serializing_if = "Option::is_none")]
    pub output_text_url: Option<String>,
    #[serde(rename = "runtime", skip_serializing_if = "Option::is_none")]
    pub runtime: Option<f32>,
    #[serde(rename = "trigger", skip_serializing_if = "Option::is_none")]
    pub trigger: Option<String>,
    #[serde(rename = "triggered_by", skip_serializing_if = "Option::is_none")]
    pub triggered_by: Option<String>,
    #[serde(rename = "env", skip_serializing_if = "Option::is_none")]
    pub env: Option<serde_json::Value>,
    #[serde(rename = "user_env", skip_serializing_if = "Option::is_none")]
    pub user_env: Option<serde_json::Value>,
    #[serde(rename = "artifacts", skip_serializing_if = "Option::is_none")]
    pub artifacts: Option<Vec<String>>,
}

impl JobModel {
    pub fn new() -> JobModel {
        JobModel {
            uid: None,
            commit: None,
            _ref: None,
            prinfo: None,
            creation_time: None,
            start_time: None,
            fasttracked: None,
            status: None,
            state: None,
            output: None,
            output_text_url: None,
            runtime: None,
            trigger: None,
            triggered_by: None,
            env: None,
            user_env: None,
            artifacts: None,
        }
    }
}


